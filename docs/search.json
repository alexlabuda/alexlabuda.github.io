[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "A data science blog that works",
    "section": "",
    "text": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective\n\n\nFrom Numbers to Maps: Decoding Chicago’s Crime Data\n\n\n\ngt\n\n\ntables\n\n\nnews\n\n\n\nDive into an analytical exploration of Chicago’s 2015 crime data using interactive maps and dynamic tables, bringing numbers to life.\n\n\n\n\n\nJan 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMapping Haunted Places in New York\n\n\nExploring Eerie Locations with Interactive Leaflet Maps\n\n\n\nData Visualization\n\n\nLeaflet\n\n\nNew York\n\n\n\nJoin us on a spine-tingling journey as we map out the most haunted places in New York, combining fascinating tales with interactive data visualization.\n\n\n\n\n\nJan 29, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWhat’s new in {gt} tables?\n\n\nA look at some new features in the {gt} package.\n\n\n\ngt\n\n\ntables\n\n\nnews\n\n\n\nIn this post we will explore some of my favorite new (and some old) features in {gt} tables\n\n\n\n\n\nJan 25, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nExploring Global Fertility: A Journey Across Borders\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\nDec 25, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Alex Labuda, Data Scientist",
    "section": "",
    "text": "Welcome! I’m a Data Scientist and Tableau Developer based in New York.\nWith a keen focus on leveraging the power of data science, I empower decision-makers to tackle complex business challenges and craft effective business intelligence tools to track their success journey.\nCurrently, I’m part of the dynamic team at Zion & Zion, an innovative marketing agency in Arizona, where I blend analytical expertise with creative strategies to drive meaningful results. My approach is rooted in both the art and science of data, ensuring that every solution is not just technically sound, but also strategically aligned with business goals.\nLet’s connect and explore how we can turn data into your most powerful asset!"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html",
    "href": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html",
    "title": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective",
    "section": "",
    "text": "[WORK IN PROGRESS]\n\nWelcome to a deep dive into the world of data visualization and analysis, focusing on one of the most pressing urban issues: crime. In this blog post, we’re going to explore the intricate patterns of crime in Chicago for the year 2015. Leveraging the power of Leaflet for interactive mapping and the versatility of {gt} tables, we’ll uncover the hidden stories behind the numbers.\nThis journey isn’t just about numbers and statistics; it’s about understanding the geographic distribution and frequency of various types of crimes in one of America’s largest cities. We’ll visualize this data in a way that’s both insightful and accessible, even if you’re not a data scientist. From the most common crimes to the hotspots of criminal activities, our analysis will provide a comprehensive look at the crime landscape of Chicago in 2015.\nSo, whether you’re a data enthusiast, a policy maker, a Chicago resident, or simply curious, join us as we map out the contours of crime in the Windy City, discovering patterns and insights that could inform future strategies and solutions."
  },
  {
    "objectID": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#chicago-crimes-mere-data-or-deep-insights",
    "href": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#chicago-crimes-mere-data-or-deep-insights",
    "title": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective",
    "section": "",
    "text": "[WORK IN PROGRESS]\n\nWelcome to a deep dive into the world of data visualization and analysis, focusing on one of the most pressing urban issues: crime. In this blog post, we’re going to explore the intricate patterns of crime in Chicago for the year 2015. Leveraging the power of Leaflet for interactive mapping and the versatility of {gt} tables, we’ll uncover the hidden stories behind the numbers.\nThis journey isn’t just about numbers and statistics; it’s about understanding the geographic distribution and frequency of various types of crimes in one of America’s largest cities. We’ll visualize this data in a way that’s both insightful and accessible, even if you’re not a data scientist. From the most common crimes to the hotspots of criminal activities, our analysis will provide a comprehensive look at the crime landscape of Chicago in 2015.\nSo, whether you’re a data enthusiast, a policy maker, a Chicago resident, or simply curious, join us as we map out the contours of crime in the Windy City, discovering patterns and insights that could inform future strategies and solutions."
  },
  {
    "objectID": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#the-most-common-crimes-in-chicago-2015",
    "href": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#the-most-common-crimes-in-chicago-2015",
    "title": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective",
    "section": "The Most Common Crimes in Chicago (2015)",
    "text": "The Most Common Crimes in Chicago (2015)\n\n\nShow the code\n# Calculate the maximum n value with an offset\nmax_n_offset &lt;- chicago_crime_full_tbl %&gt;% \n  count(primary_type, sort = TRUE) %&gt;% \n  head(10) %&gt;% \n  summarise(max_n = max(n) * 1.10) %&gt;% \n  pull(max_n)\n\nchicago_crime_full_tbl |&gt; \n  # bar plot of most frequent crimes\n  count(primary_type, sort = TRUE) |&gt;\n  head(10) |&gt;\n  ggplot(aes(x = fct_reorder(primary_type, n), y = n)) +\n  # Add data labels\n  geom_text(aes(label = scales::comma(n)), hjust = -0.1, size = 3) +\n  scale_y_continuous(\n    labels = scales::comma, \n    limits = c(0, max_n_offset)\n    ) +\n  geom_col(fill = \"red\", color = \"darkred\", alpha = 0.05, linewidth = 0.2) +\n  coord_flip() +\n  labs(\n    title = NULL,\n    x     = NULL,\n    y     = \"Number of Crimes\"\n  ) +\n  theme(\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 13, hjust = -0.3),\n    axis.title.x = element_text(size = 11, vjust = -0.2)\n  )"
  },
  {
    "objectID": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#how-do-the-top-10-crimes-compare-over-the-years",
    "href": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#how-do-the-top-10-crimes-compare-over-the-years",
    "title": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective",
    "section": "How do the top 10 crimes compare over the years?",
    "text": "How do the top 10 crimes compare over the years?\n\n\nShow the code\nchicago_crime_wide_tbl |&gt;\n  arrange(desc(Total)) |&gt;\n  gt(rowname_col = \"primary_type\") |&gt;\n  tab_header(\n    title    = md(\"**TOP 10** Crime types in Chicago\"),\n    subtitle = \"By year (2012 - 2015)\"\n    ) |&gt;\n  tab_stubhead(label = md(\"**Crime Type**\")) |&gt;\n  cols_nanoplot(\n    columns       = -starts_with(c(\"primary_type\", \"Total\")),\n    new_col_name  = \"nanoplots\",\n    new_col_label = md(\"*2012 - 2015*\"),\n    options = nanoplot_options(\n      data_line_stroke_color = \"#E91E63\",\n      data_area_fill_color   = \"#E91E63\",\n      data_point_fill_color  = \"#E91E63\"\n      )\n  ) |&gt;\n  # comma format total column\n  fmt_number(\n    columns = Total,\n    decimals = 0\n  ) |&gt;\n  cols_align(align = \"center\", columns = nanoplots) |&gt;\n  opt_align_table_header(align = \"left\") |&gt;\n  tab_options(heading.padding = px(3)) |&gt; \n  tab_options(table.width = pct(60))\n\n\n\n\n\n\n\n\n\n\n\n\n\nTOP 10 Crime types in Chicago\n\n\nBy year (2012 - 2015)\n\n\nCrime Type\nTotal\n2012 - 2015\n\n\n\n\nTHEFT\n235,522\n\n\n     \n\n        71.5K 46.0K   46.0K   71.5K   61.4K   56.7K\n\n\n\n\nBATTERY\n187,275\n\n\n     \n\n        54.0K 35.0K   35.0K   54.0K   49.4K   48.8K\n\n\n\n\nCRIMINAL DAMAGE\n108,565\n\n\n     \n\n        30.9K 21.3K   21.3K   30.9K   27.8K   28.6K\n\n\n\n\nNARCOTICS\n103,612\n\n\n     \n\n        34.1K 19.0K   19.0K   34.1K   28.9K   21.6K\n\n\n\n\nASSAULT\n63,720\n\n\n     \n\n        18.0K 11.9K   11.9K   18.0K   16.9K   17.0K\n\n\n\n\nOTHER OFFENSE\n62,087\n\n\n     \n\n        18.0K 9.90K   9.90K   18.0K   16.9K   17.3K\n\n\n\n\nBURGLARY\n60,035\n\n\n     \n\n        17.9K 13.1K   14.5K   17.9K   14.6K   13.1K\n\n\n\n\nDECEPTIVE PRACTICE\n50,113\n\n\n     \n\n        14.9K 8.06K   8.06K   13.2K   14.9K   13.9K\n\n\n\n\nMOTOR VEHICLE THEFT\n42,220\n\n\n     \n\n        12.6K 9.75K   9.75K   12.6K   9.90K   10.0K\n\n\n\n\nROBBERY\n39,933\n\n\n     \n\n        11.8K 8.69K   8.69K   11.8K   9.80K   9.63K"
  },
  {
    "objectID": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#mapping-chicagos-crime-hotspots",
    "href": "posts/2024/mapping-chicago-crimes/mapping-chicago-crime.html#mapping-chicagos-crime-hotspots",
    "title": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective",
    "section": "Mapping Chicago’s Crime Hotspots",
    "text": "Mapping Chicago’s Crime Hotspots\n\n\nShow the code\n# LEAFLET -----------------------------------------------------------------\n\nleaflet(crimes_preprocess_tbl) %&gt;% \n  addTiles() %&gt;% \n  # weight circle size by n\n  addCircleMarkers(\n    lng = ~longitude, \n    lat = ~latitude, \n    radius = ~n * 0.5, \n    color = \"red\", \n    stroke = FALSE, \n    fillOpacity = 0.28,\n    popup = ~text\n  ) |&gt; \n  # add dark providertile\n  addProviderTiles(\"CartoDB.DarkMatter\")"
  },
  {
    "objectID": "posts/2024/01-gt-tables/01-gt-tables.html",
    "href": "posts/2024/01-gt-tables/01-gt-tables.html",
    "title": "What’s new in {gt} tables?",
    "section": "",
    "text": "As we delve into the latest enhancements of the gt package in R, let’s take a moment to appreciate what gt tables is and why it has become an indispensable tool for data scientists and analysts.\n\ngt, short for Great Tables, is a powerful R package designed to create rich, customizable tables. It stands out in the R ecosystem for its ability to elegantly handle the presentation aspect of data analysis. With gt, users can transform basic data frames into professionally styled tables that are not only informative but also visually compelling.\n\nThis package excels in its flexibility and ease of use, allowing for detailed adjustments to table formatting, style, and layout. It supports a variety of functionalities such as merging cells, adding footnotes, integrating conditional formatting, and much more, making it a versatile choice for a wide range of applications.\nAs we explore the new features of gt, we will see how it continues to evolve, further enhancing its capabilities to meet the growing demands of data visualization and reporting in the R community."
  },
  {
    "objectID": "posts/2024/01-gt-tables/01-gt-tables.html#what-is-gt-tables",
    "href": "posts/2024/01-gt-tables/01-gt-tables.html#what-is-gt-tables",
    "title": "What’s new in {gt} tables?",
    "section": "",
    "text": "As we delve into the latest enhancements of the gt package in R, let’s take a moment to appreciate what gt tables is and why it has become an indispensable tool for data scientists and analysts.\n\ngt, short for Great Tables, is a powerful R package designed to create rich, customizable tables. It stands out in the R ecosystem for its ability to elegantly handle the presentation aspect of data analysis. With gt, users can transform basic data frames into professionally styled tables that are not only informative but also visually compelling.\n\nThis package excels in its flexibility and ease of use, allowing for detailed adjustments to table formatting, style, and layout. It supports a variety of functionalities such as merging cells, adding footnotes, integrating conditional formatting, and much more, making it a versatile choice for a wide range of applications.\nAs we explore the new features of gt, we will see how it continues to evolve, further enhancing its capabilities to meet the growing demands of data visualization and reporting in the R community."
  },
  {
    "objectID": "posts/2024/01-gt-tables/01-gt-tables.html#nanoplots-interactive-plots-in-your-gt-table",
    "href": "posts/2024/01-gt-tables/01-gt-tables.html#nanoplots-interactive-plots-in-your-gt-table",
    "title": "What’s new in {gt} tables?",
    "section": "Nanoplots, interactive plots in your gt table",
    "text": "Nanoplots, interactive plots in your gt table\nNanoplots are compact, interactive visualizations designed for inclusion in gt tables. Their main features include:\n\nCompactness: Designed to be simple and space-efficient, suitable for embedding in tables.\nBasic Interactivity: Users can interact with the plots, like hovering over data points to see values.\nVariety of Plot Types: Supports different plot styles such as line, bar, and boxplot.\nCustomizability: Offers options for customization, including formatting and labeling.\n\nThe cols_nanoplot() function in gt is used to create nanoplots. It allows the selection of specific columns for data, which are then represented in the chosen plot style. These plots can display data compactly and interactively, making them a useful tool for enhancing the presentation of data within tables.\n\nLine plots\nBelow is an example of a nanoplot (plot_style = \"line\") in a gt table. The plot shows the monthly close price of the S&P 500 from 2016 to 2023.\n\n\n\n\n\n\nHover to reveal data points!\n\n\n\n\n\nYou can hover over the nanoplots below to see the values of the data points. If you hover over the left-most plot of the chart area you can also see the range of values in the plot.\n\n\n\n\n\nShow the code\nGSPC_2016_2023 |&gt;\n  arrange(-year) |&gt;\n  gt(rowname_col = \"year\") |&gt;\n  tab_header(\n    title    = md(\"**SP500** performance by month, 2016 - 2024\"),\n    subtitle = \"Monthly Close Price from Yahoo Finance\"\n    ) |&gt;\n  tab_stubhead(label = md(\"**Year**\")) |&gt;\n  cols_nanoplot(\n    columns       = starts_with(\"close\"),\n    new_col_name  = \"nanoplots\",\n    new_col_label = md(\"*Monthly Close Price*\"),\n    options = nanoplot_options(\n      data_line_stroke_color = \"#E91E63\",\n      data_area_fill_color   = \"#E91E63\",\n      data_point_fill_color  = \"#E91E63\"\n      )\n  ) |&gt;\n  cols_align(align = \"center\", columns = nanoplots) |&gt;\n  tab_footnote(\n    footnote = \"Source: Yahoo Finance\",\n    locations = cells_column_labels(columns = nanoplots)\n  ) |&gt; \n  opt_align_table_header(align = \"left\") |&gt;\n  tab_options(heading.padding = px(3)) |&gt; \n  tab_source_note(source_note = md(\n    \"Data is sourced from `Yahoo Finance` using the **quantmod** package.\"\n  )) |&gt; \n  tab_options(table.width = pct(60))\n\n\n\n\n\n  \n    \n      SP500 performance by month, 2016 - 2024\n    \n    \n      Monthly Close Price from Yahoo Finance\n    \n    \n      Year\n      Monthly Close Price1\n    \n  \n  \n    2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.77K\n3.97K\n\n\n4.08K\n\n\n3.97K\n\n\n4.11K\n\n\n4.17K\n\n\n4.18K\n\n\n4.45K\n\n\n4.59K\n\n\n4.51K\n\n\n4.29K\n\n\n4.19K\n\n\n4.57K\n\n\n4.77K\n\n\n    2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.53K\n3.59K\n\n\n4.52K\n\n\n4.37K\n\n\n4.53K\n\n\n4.13K\n\n\n4.13K\n\n\n3.79K\n\n\n4.13K\n\n\n3.96K\n\n\n3.59K\n\n\n3.87K\n\n\n4.08K\n\n\n3.84K\n\n\n    2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.77K\n3.71K\n\n\n3.71K\n\n\n3.81K\n\n\n3.97K\n\n\n4.18K\n\n\n4.20K\n\n\n4.30K\n\n\n4.40K\n\n\n4.52K\n\n\n4.31K\n\n\n4.61K\n\n\n4.57K\n\n\n4.77K\n\n\n    2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.76K\n2.58K\n\n\n3.23K\n\n\n2.95K\n\n\n2.58K\n\n\n2.91K\n\n\n3.04K\n\n\n3.10K\n\n\n3.27K\n\n\n3.50K\n\n\n3.36K\n\n\n3.27K\n\n\n3.62K\n\n\n3.76K\n\n\n    2019\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.23K\n2.70K\n\n\n2.70K\n\n\n2.78K\n\n\n2.83K\n\n\n2.95K\n\n\n2.75K\n\n\n2.94K\n\n\n2.98K\n\n\n2.93K\n\n\n2.98K\n\n\n3.04K\n\n\n3.14K\n\n\n3.23K\n\n\n    2018\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.91K\n2.51K\n\n\n2.82K\n\n\n2.71K\n\n\n2.64K\n\n\n2.65K\n\n\n2.71K\n\n\n2.72K\n\n\n2.82K\n\n\n2.90K\n\n\n2.91K\n\n\n2.71K\n\n\n2.76K\n\n\n2.51K\n\n\n    2017\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.67K\n2.28K\n\n\n2.28K\n\n\n2.36K\n\n\n2.36K\n\n\n2.38K\n\n\n2.41K\n\n\n2.42K\n\n\n2.47K\n\n\n2.47K\n\n\n2.52K\n\n\n2.58K\n\n\n2.65K\n\n\n2.67K\n\n\n    2016\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.24K\n1.93K\n\n\n1.94K\n\n\n1.93K\n\n\n2.06K\n\n\n2.07K\n\n\n2.10K\n\n\n2.10K\n\n\n2.17K\n\n\n2.17K\n\n\n2.17K\n\n\n2.13K\n\n\n2.20K\n\n\n2.24K\n\n\n  \n  \n    \n      Data is sourced from Yahoo Finance using the quantmod package.\n    \n  \n  \n    \n      1 Source: Yahoo Finance\n    \n  \n\n\n\n\n\n\nBoxplots\nAmong these, the “boxplot” nano plot is particularly useful for summarizing data distributions directly within a table cell. This feature enhances the ability to visualize and compare distributions across different groups or categories, providing a more intuitive and immediate understanding of the data. For more details, you can visit the Posit blog.\n\n\n\n\n\n\nHover to reveal data points!\n\n\n\n\n\nYou can hover over the boxplots below to see the values of the data points.\n\n\n\n\n\nShow the code\nbind_cols(\n  palmerpenguins::penguins |&gt; \n  drop_na() |&gt;\n  summarize(bill_length_mm = paste(bill_length_mm, collapse = \",\"), .by = species),\n  palmerpenguins::penguins |&gt; \n  drop_na() |&gt;\n  summarize(bill_depth_mm = paste(bill_depth_mm, collapse = \",\"), .by = species) |&gt; \n    select(-species),\n  palmerpenguins::penguins |&gt; \n  drop_na() |&gt;\n  summarize(flipper_length_mm = paste(flipper_length_mm, collapse = \",\"), .by = species) |&gt; \n    select(-species),\n  palmerpenguins::penguins |&gt; \n  drop_na() |&gt;\n  summarize(body_mass_g = paste(body_mass_g, collapse = \",\"), .by = species) |&gt; \n    select(-species)\n  ) |&gt; \n  rename(Species = species) |&gt; \n  gt() |&gt; \n  cols_nanoplot(\n    columns   = bill_length_mm,\n    plot_type = \"boxplot\",\n    new_col_name = \"Bill Length (mm)\",\n    new_col_label = \"Bill Length (mm)\"\n  ) |&gt; \n  cols_nanoplot(\n    columns   = bill_depth_mm,\n    plot_type = \"boxplot\",\n    new_col_name = \"Bill Depth (mm)\",\n    new_col_label = \"Bill Depth (mm)\"\n  ) |&gt; \n  cols_nanoplot(\n    columns   = flipper_length_mm,\n    plot_type = \"boxplot\",\n    new_col_name = \"Flipper Length (mm)\",\n    new_col_label = \"Flipper Length (mm)\"\n  ) |&gt; \n  cols_nanoplot(\n    columns   = body_mass_g,\n    plot_type = \"boxplot\",\n    new_col_name = \"Body Mass (mm)\",\n    new_col_label = \"Body Mass (mm)\"\n  ) |&gt; \n  tab_header(\n    title = md(\"**Comparative Anatomy of Penguin Species**\"),\n    subtitle = \"Boxplot Analysis of Bill, Flipper, and Body Measurements\"\n  ) |&gt;\n  opt_align_table_header(align = \"left\") |&gt;\n  tab_options(heading.padding = px(5),\n              data_row.padding = px(12),\n              row.striping.background_color = \"white\") |&gt; \n  tab_source_note(source_note = md(\n    \"Data taken from the `penguins` dataset in the **palmerspenguins** package.\"\n  ))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComparative Anatomy of Penguin Species\n\n\nBoxplot Analysis of Bill, Flipper, and Body Measurements\n\n\nSpecies\nBill Length (mm)\nBill Depth (mm)\nFlipper Length (mm)\nBody Mass (mm)\n\n\n\n\nAdelie\n\n\n     \n\n                                  34.736.738.840.843.1\n\n\n\n\n     \n\n                                  16.517.518.419.020.7\n\n\n\n\n     \n\n                            180186190195200\n\n\n\n\n     \n\n                                  3.01K3.36K3.70K4.00K4.49K\n\n\n\n\nGentoo\n\n\n     \n\n                          42.945.347.449.652.2\n\n\n\n\n     \n\n                          13.614.215.015.816.8\n\n\n\n\n     \n\n        208212216222230\n\n\n\n\n     \n\n                        4.30K4.70K5.05K5.50K5.86K\n\n\n\n\nChinstrap\n\n\n     \n\n                  42.746.349.651.153.3\n\n\n\n\n     \n\n            16.617.518.419.420.0\n\n\n\n\n     \n\n                  186191196201209\n\n\n\n\n     \n\n                3.25K3.49K3.70K3.95K4.43K\n\n\n\n\n\nData taken from the penguins dataset in the palmerspenguins package."
  },
  {
    "objectID": "posts/2024/01-gt-tables/01-gt-tables.html#interactivity-with-style",
    "href": "posts/2024/01-gt-tables/01-gt-tables.html#interactivity-with-style",
    "title": "What’s new in {gt} tables?",
    "section": "Interactivity (…with style)",
    "text": "Interactivity (…with style)\nAnother significant new feature is the introduction of interactive HTML tables. This advancement transforms the way tables are created and interacted with in R, offering a more dynamic and engaging user experience. With this update, gt tables become not just a means of displaying data, but an interactive tool for data exploration and presentation. This enhancement aligns with the ongoing evolution of gt as a comprehensive solution for data visualization in R, catering to the growing demands for interactivity in data presentation.\n\n\nShow the code\ntowny_tbl_styled &lt;-\n  towny_tbl |&gt;\n  dplyr::arrange(desc(population)) |&gt;\n  gt() |&gt;\n  fmt_number(decimals = 1) |&gt;\n  fmt_integer(population) |&gt;\n  cols_label_with(\n    fn = ~ janitor::make_clean_names(., case = \"title\")\n  ) |&gt;\n  data_color(\n    columns = density,\n    palette = \"Blues\"\n  ) |&gt;\n  data_color(\n    columns = population,\n    palette = \"Reds\"\n  ) |&gt;\n  tab_style(\n    style = cell_fill(color = \"gray98\"),\n    locations = cells_body(columns = c(latitude, longitude))\n  ) |&gt;\n  tab_style(\n    locations = cells_body(columns = name),\n    style = cell_text(weight = \"bold\")\n  ) |&gt;\n  opt_interactive(\n    use_filters = TRUE,\n    use_compact_mode = TRUE,\n    use_text_wrapping = FALSE\n  )\n\n## Adding a header and footer\ntowny_tbl_header &lt;-\n  towny_tbl_styled |&gt;\n  tab_header(\n    title = md(\"**Population** and **Density** Data\"),\n    subtitle = \"Arranged from largest to smallest municipality\"\n  ) |&gt;\n  opt_align_table_header(align = \"left\") |&gt;\n  tab_options(heading.padding = px(1))\n\ntowny_tbl_header |&gt;\n  tab_source_note(source_note = md(\n    \"Data taken from the `towny` dataset in the **gt** package.\"\n  )) |&gt;\n  tab_footnote(\n    footnote = \"Density here is the population divided by\n    the land area.\",\n    locations = cells_column_labels(columns = density)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Population values obtained from the 2021 census.\",\n    locations = cells_column_labels(columns = population)\n  ) |&gt;\n  opt_footnote_marks(marks = c(\"†\", \"‡\")) |&gt;\n  opt_footnote_spec(spec_ref = \"i\", spec_ftr = \"i\")\n\n\n\n\n\nPopulation and Density Data\nArranged from largest to smallest municipality\n\n\n\n\n\n\nData taken from the towny dataset in the gt package.\n\n\n\n\n\n\n† Population values obtained from the 2021 census.\n\n\n‡ Density here is the population divided by\n    the land area."
  },
  {
    "objectID": "posts/2024/01-gt-tables/01-gt-tables.html#closing-thoughts",
    "href": "posts/2024/01-gt-tables/01-gt-tables.html#closing-thoughts",
    "title": "What’s new in {gt} tables?",
    "section": "Closing thoughts",
    "text": "Closing thoughts\nAs we’ve explored some of the intriguing new features in the gt package, it’s clear that gt tables are evolving into an even more powerful tool for data visualization and presentation. With innovations like nanoplots adding a new dimension of interactivity and visual appeal to our tables, the possibilities for data representation are expanding. The practicality of gt tables, combined with their increasing flexibility and style, makes them an essential part of any data scientist’s toolkit.\nAs this journey through the gt package’s latest offerings comes to a close, remember that this is just the tip of the iceberg. Stay tuned for future posts where we’ll dive deeper into the gt tables’ feature set, uncovering more ways to bring data to life. Whether you’re a seasoned data analyst or just starting out, the evolving landscape of gt tables promises to offer something new and exciting for everyone. Let’s continue to explore and innovate together in the world of data visualization!"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/2024/ggplot-birthrates/ggplot-birthrates.html",
    "href": "posts/2024/ggplot-birthrates/ggplot-birthrates.html",
    "title": "Exploring Global Fertility: A Journey Across Borders",
    "section": "",
    "text": "In a world bustling with over seven billion people, each individual represents a unique thread in the intricate tapestry of humanity. But beyond the surface of bustling streets and crowded cities lies a story told not through words, but through numbers - the story of fertility rates. This vital statistic, often overlooked, serves as a silent narrator of our times, speaking volumes about societal trends, economic conditions, and cultural shifts.\nAs we embark on a journey across continents, we delve into the fascinating world of fertility rates. From the snow-capped villages of Scandinavia to the sun-drenched lands of Sub-Saharan Africa, we’ll explore how these numbers shape nations, influence policies, and reflect the diverse tapestry of human existence.\nJoin me as we unravel the tales hidden within these figures, discovering not just the “how” and “what,” but the profound “why” behind the fertility rates of various countries. We’ll look at how these rates are more than just numbers on a page; they are a reflection of healthcare access, gender equality, economic stability, and cultural norms.\nThrough this exploration, we’ll gain a deeper understanding of our world and its future, one number at a time.\nPlot the US birthrates through time\n\n\nShow the code\n# Create a function of the above plot code\nplot_line &lt;- function(data, iso2c = \"US\", title = \"United States\",\n                      title_size = 10, hjust = 0,\n                      dot_size = 0.6, linewidth = 0.2) {\n  # Check if required columns exist in the data\n  if (!(\"iso2c\" %in% names(data)) || !(\"date\" %in% names(data)) || !(\"SP.DYN.TFRT.IN\" %in% names(data))) {\n    stop(\"Data must contain 'iso2c', 'date', and 'SP.DYN.TFRT.IN' columns.\")\n  }\n\n  # Filtering and plotting\n  plot &lt;- data %&gt;%\n    filter(iso2c == !!iso2c) %&gt;%  # Correct filtering\n    ggplot(aes(x = date, y = SP.DYN.TFRT.IN)) +\n    geom_line(alpha = 0.7, linewidth = linewidth) +\n    geom_point(size = dot_size, alpha = 0.7) +\n    geom_smooth(\n      span = 0.9,\n      linewidth = linewidth,\n      linetype = 2,\n      se = FALSE,\n      color = \"#E91E63\"\n    ) +\n    labs(\n      x = \"\",\n      y = \"\",\n      title = title\n    ) +\n    theme(\n      plot.title      = element_text(size = title_size, face = \"bold\",\n                                     hjust = hjust),\n      axis.title      = element_text(size = 8, face = \"bold\"),\n      axis.text       = element_text(size = 8),\n      legend.position = \"none\",\n      panel.grid      = element_blank()\n    )\n\n  return(plot)\n}\n\nplot_line_small &lt;- function(data, iso2c = \"US\", title = \"United States\",\n                      title_size = 10, hjust = 0,\n                      dot_size = 0.6, linewidth = 0.3) {\n  # Check if required columns exist in the data\n  if (!(\"iso2c\" %in% names(data)) || !(\"date\" %in% names(data)) || !(\"SP.DYN.TFRT.IN\" %in% names(data))) {\n    stop(\"Data must contain 'iso2c', 'date', and 'SP.DYN.TFRT.IN' columns.\")\n  }\n\n  # Filtering and plotting\n  plot &lt;- data %&gt;%\n    filter(iso2c == !!iso2c) %&gt;%  # Correct filtering\n    ggplot(aes(x = date, y = SP.DYN.TFRT.IN)) +\n    geom_line(alpha = 0.9, linewidth = linewidth) +\n    # geom_point(size = dot_size, alpha = 0.7) +\n    # geom_smooth(\n    #   span = 0.9,\n    #   linewidth = linewidth,\n    #   linetype = 2,\n    #   se = FALSE,\n    #   color = \"#E91E63\"\n    # ) +\n    labs(\n      x = \"\",\n      y = \"\",\n      title = title\n    ) +\n    theme(\n      plot.title      = element_text(size = title_size, face = \"bold\",\n                                     hjust = hjust),\n      axis.title      = element_text(size = 8, face = \"bold\"),\n      axis.text       = element_text(size = 7),\n      legend.position = \"none\",\n      panel.grid      = element_blank()\n    )\n\n  return(plot)\n}\n\n\n\n\nShow the code\n# United States\nline_us &lt;- plot_line_small(fert_tbl, \"US\", \"United States\",\n                     hjust = 0.5)\n\n# China\nline_china &lt;- plot_line_small(fert_tbl, \"CN\", \"China\",\n                        hjust = 0.5)\n\n# Japan\nline_japan &lt;- plot_line_small(fert_tbl, \"JP\", \"Japan\",\n                        hjust = 0.5)\n\n# Russia\nline_russia &lt;- plot_line_small(fert_tbl, \"RU\", \"Russia\",\n                         hjust = 0.5)\n\n# World\nline_world &lt;- plot_line(fert_tbl, \"1W\", \"World\",\n                        title_size = 14, hjust = 0.5,\n                        dot_size = 1.2, linewidth = 0.4)"
  },
  {
    "objectID": "posts/2024/ggplot-birthrates/ggplot-birthrates.html#lets-explore-the-world-ferility-rates",
    "href": "posts/2024/ggplot-birthrates/ggplot-birthrates.html#lets-explore-the-world-ferility-rates",
    "title": "Exploring Global Fertility: A Journey Across Borders",
    "section": "",
    "text": "In a world bustling with over seven billion people, each individual represents a unique thread in the intricate tapestry of humanity. But beyond the surface of bustling streets and crowded cities lies a story told not through words, but through numbers - the story of fertility rates. This vital statistic, often overlooked, serves as a silent narrator of our times, speaking volumes about societal trends, economic conditions, and cultural shifts.\nAs we embark on a journey across continents, we delve into the fascinating world of fertility rates. From the snow-capped villages of Scandinavia to the sun-drenched lands of Sub-Saharan Africa, we’ll explore how these numbers shape nations, influence policies, and reflect the diverse tapestry of human existence.\nJoin me as we unravel the tales hidden within these figures, discovering not just the “how” and “what,” but the profound “why” behind the fertility rates of various countries. We’ll look at how these rates are more than just numbers on a page; they are a reflection of healthcare access, gender equality, economic stability, and cultural norms.\nThrough this exploration, we’ll gain a deeper understanding of our world and its future, one number at a time.\nPlot the US birthrates through time\n\n\nShow the code\n# Create a function of the above plot code\nplot_line &lt;- function(data, iso2c = \"US\", title = \"United States\",\n                      title_size = 10, hjust = 0,\n                      dot_size = 0.6, linewidth = 0.2) {\n  # Check if required columns exist in the data\n  if (!(\"iso2c\" %in% names(data)) || !(\"date\" %in% names(data)) || !(\"SP.DYN.TFRT.IN\" %in% names(data))) {\n    stop(\"Data must contain 'iso2c', 'date', and 'SP.DYN.TFRT.IN' columns.\")\n  }\n\n  # Filtering and plotting\n  plot &lt;- data %&gt;%\n    filter(iso2c == !!iso2c) %&gt;%  # Correct filtering\n    ggplot(aes(x = date, y = SP.DYN.TFRT.IN)) +\n    geom_line(alpha = 0.7, linewidth = linewidth) +\n    geom_point(size = dot_size, alpha = 0.7) +\n    geom_smooth(\n      span = 0.9,\n      linewidth = linewidth,\n      linetype = 2,\n      se = FALSE,\n      color = \"#E91E63\"\n    ) +\n    labs(\n      x = \"\",\n      y = \"\",\n      title = title\n    ) +\n    theme(\n      plot.title      = element_text(size = title_size, face = \"bold\",\n                                     hjust = hjust),\n      axis.title      = element_text(size = 8, face = \"bold\"),\n      axis.text       = element_text(size = 8),\n      legend.position = \"none\",\n      panel.grid      = element_blank()\n    )\n\n  return(plot)\n}\n\nplot_line_small &lt;- function(data, iso2c = \"US\", title = \"United States\",\n                      title_size = 10, hjust = 0,\n                      dot_size = 0.6, linewidth = 0.3) {\n  # Check if required columns exist in the data\n  if (!(\"iso2c\" %in% names(data)) || !(\"date\" %in% names(data)) || !(\"SP.DYN.TFRT.IN\" %in% names(data))) {\n    stop(\"Data must contain 'iso2c', 'date', and 'SP.DYN.TFRT.IN' columns.\")\n  }\n\n  # Filtering and plotting\n  plot &lt;- data %&gt;%\n    filter(iso2c == !!iso2c) %&gt;%  # Correct filtering\n    ggplot(aes(x = date, y = SP.DYN.TFRT.IN)) +\n    geom_line(alpha = 0.9, linewidth = linewidth) +\n    # geom_point(size = dot_size, alpha = 0.7) +\n    # geom_smooth(\n    #   span = 0.9,\n    #   linewidth = linewidth,\n    #   linetype = 2,\n    #   se = FALSE,\n    #   color = \"#E91E63\"\n    # ) +\n    labs(\n      x = \"\",\n      y = \"\",\n      title = title\n    ) +\n    theme(\n      plot.title      = element_text(size = title_size, face = \"bold\",\n                                     hjust = hjust),\n      axis.title      = element_text(size = 8, face = \"bold\"),\n      axis.text       = element_text(size = 7),\n      legend.position = \"none\",\n      panel.grid      = element_blank()\n    )\n\n  return(plot)\n}\n\n\n\n\nShow the code\n# United States\nline_us &lt;- plot_line_small(fert_tbl, \"US\", \"United States\",\n                     hjust = 0.5)\n\n# China\nline_china &lt;- plot_line_small(fert_tbl, \"CN\", \"China\",\n                        hjust = 0.5)\n\n# Japan\nline_japan &lt;- plot_line_small(fert_tbl, \"JP\", \"Japan\",\n                        hjust = 0.5)\n\n# Russia\nline_russia &lt;- plot_line_small(fert_tbl, \"RU\", \"Russia\",\n                         hjust = 0.5)\n\n# World\nline_world &lt;- plot_line(fert_tbl, \"1W\", \"World\",\n                        title_size = 14, hjust = 0.5,\n                        dot_size = 1.2, linewidth = 0.4)"
  },
  {
    "objectID": "posts/2024/haunted-places-new-york/map-haunted-places.html",
    "href": "posts/2024/haunted-places-new-york/map-haunted-places.html",
    "title": "Mapping Haunted Places in New York",
    "section": "",
    "text": "“There are things that are not of this world, mysterious phenomena that defy explanation. These are the tales of the haunted places in New York.” - Inspired by H.P. Lovecraft\n\nNew York, a city known for its towering skyscrapers and bustling streets, also harbors a less spoken-about aspect: its haunted past. From eerie mansions to historic landmarks, the state of New York is rich with locations that are said to be home to unexplained phenomena and ghostly presences.\nIn this blog post, we dive into the intriguing world of the paranormal by mapping out some of the most haunted places in New York. Using data visualization techniques with the Leaflet package in R, we bring these chilling tales to life. Each point on the map not only marks a location but also tells the story of its haunting, offering a unique glimpse into the mysterious and the unexplained.\nAs you explore the map, be prepared to uncover the hidden and eerie side of New York. Each marker is a doorway to a story that blurs the line between reality and the supernatural.\nSo, let’s embark on this spine-tingling journey and discover what secrets lie in the haunted corners of New York.\n\n\n\n\n\n\nClick red points to read more!\n\n\n\n\n\nClick red points to read more information about the haunted. Click or zoom in and out on yellow and green clusters to reveal more data points.\n\n\n\n\n\nShow the code\nleaflet(plot_data_formatted) %&gt;% \n  addTiles() %&gt;% \n  addCircleMarkers(\n    lng = ~longitude, lat = ~latitude, popup = ~pop_ups,\n    radius = 8, # Adjust the size of the circle\n    color = \"darkred\", # Border color\n    fillColor = \"darkred\", # Fill color\n    fillOpacity = 0.5, # Fill opacity\n    clusterOptions = markerClusterOptions(transparent = TRUE)\n  ) %&gt;% \n  addProviderTiles(providers$CartoDB.Positron)"
  },
  {
    "objectID": "posts/2024/haunted-places-new-york/map-haunted-places.html#haunted-place-of-new-york",
    "href": "posts/2024/haunted-places-new-york/map-haunted-places.html#haunted-place-of-new-york",
    "title": "Mapping Haunted Places in New York",
    "section": "",
    "text": "“There are things that are not of this world, mysterious phenomena that defy explanation. These are the tales of the haunted places in New York.” - Inspired by H.P. Lovecraft\n\nNew York, a city known for its towering skyscrapers and bustling streets, also harbors a less spoken-about aspect: its haunted past. From eerie mansions to historic landmarks, the state of New York is rich with locations that are said to be home to unexplained phenomena and ghostly presences.\nIn this blog post, we dive into the intriguing world of the paranormal by mapping out some of the most haunted places in New York. Using data visualization techniques with the Leaflet package in R, we bring these chilling tales to life. Each point on the map not only marks a location but also tells the story of its haunting, offering a unique glimpse into the mysterious and the unexplained.\nAs you explore the map, be prepared to uncover the hidden and eerie side of New York. Each marker is a doorway to a story that blurs the line between reality and the supernatural.\nSo, let’s embark on this spine-tingling journey and discover what secrets lie in the haunted corners of New York.\n\n\n\n\n\n\nClick red points to read more!\n\n\n\n\n\nClick red points to read more information about the haunted. Click or zoom in and out on yellow and green clusters to reveal more data points.\n\n\n\n\n\nShow the code\nleaflet(plot_data_formatted) %&gt;% \n  addTiles() %&gt;% \n  addCircleMarkers(\n    lng = ~longitude, lat = ~latitude, popup = ~pop_ups,\n    radius = 8, # Adjust the size of the circle\n    color = \"darkred\", # Border color\n    fillColor = \"darkred\", # Fill color\n    fillOpacity = 0.5, # Fill opacity\n    clusterOptions = markerClusterOptions(transparent = TRUE)\n  ) %&gt;% \n  addProviderTiles(providers$CartoDB.Positron)"
  },
  {
    "objectID": "posts/ggplot2-tips/test-ggplot-series.html",
    "href": "posts/ggplot2-tips/test-ggplot-series.html",
    "title": "This is test post for a ggplot data viz series",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/ggplot2-tips/test-ggplot-series.html#merriweather",
    "href": "posts/ggplot2-tips/test-ggplot-series.html#merriweather",
    "title": "This is test post for a ggplot data viz series",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/ggplot2-tips/test-ggplot-series.html#columns",
    "href": "posts/ggplot2-tips/test-ggplot-series.html#columns",
    "title": "This is test post for a ggplot data viz series",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/ggplot2-tips/test-ggplot-series.html#margin-captions",
    "href": "posts/ggplot2-tips/test-ggplot-series.html#margin-captions",
    "title": "This is test post for a ggplot data viz series",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/test_blog_post/test_post.html",
    "href": "posts/test_blog_post/test_post.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/test_blog_post/test_post.html#merriweather",
    "href": "posts/test_blog_post/test_post.html#merriweather",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/test_blog_post/test_post.html#columns",
    "href": "posts/test_blog_post/test_post.html#columns",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/test_blog_post/test_post.html#margin-captions",
    "href": "posts/test_blog_post/test_post.html#margin-captions",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "Visualizing Crime Patterns in Chicago: An Insightful 2015 Retrospective\n\n\nFrom Numbers to Maps: Decoding Chicago’s Crime Data\n\n\n\n\n\nJan 30, 2024\n\n\n\n\n\n\n\nMapping Haunted Places in New York\n\n\nExploring Eerie Locations with Interactive Leaflet Maps\n\n\n\n\n\nJan 29, 2024\n\n\n\n\n\n\n\nWhat’s new in {gt} tables?\n\n\nA look at some new features in the {gt} package.\n\n\n\n\n\nJan 25, 2024\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\nDec 30, 2023\n\n\n\n\n\n\n\nThis is test post for a ggplot data viz series\n\n\n\n\n\n\n\n\nDec 30, 2023\n\n\n\n\n\n\n\nThis is a dummy blog posts\n\n\n\n\n\n\n\n\nDec 30, 2023\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\nDec 27, 2023\n\n\n\n\n\n\n\nExploring Global Fertility: A Journey Across Borders\n\n\n\n\n\n\n\n\nDec 25, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ggplot-series.html",
    "href": "ggplot-series.html",
    "title": "Series: ggplot2-tips",
    "section": "",
    "text": "This is test post for a ggplot data viz series\n\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\nDec 30, 2023\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  }
]